<asset_composite xmlns="http://namespaces.softwareag.com/acdl/1.0" targetNamespace="http://namespaces.softwareag.com/webMethods/IS" name="ScOrderToCash" runtimeVersion="10.2.0.0">
  <implementation.generic type="ispackage" />
  <buildInfo name="build.version" value="1.0.110" />
  <buildInfo name="BuildVersion" value="1.0.110" />
  <buildInfo name="BuildTimestamp" value="2018-08-13T12:11:00" />
  <buildInfo name="MinimumTargetRuntimeVersion" value="10.2.0.0" />
  <property name="activatePkgOnInstall" displayName="Activate Package On Install">
    <value>true</value>
  </property>
  <property name="archivePkgOnInstall" displayName="Archive Package On Install">
    <value>true</value>
  </property>
  <property name="compilePackage" displayName="Compile Package On Install">
    <value>true</value>
  </property>
  <property name="fragPackage" displayName="Fragment Package On Install">
    <value>true</value>
  </property>
  <property name="clearACLs" displayName="Delete ACLs for the assets from the target Integration Server">
    <value>false</value>
  </property>
  <property name="disallowActivePackageInstall" displayName="disallowActivePackageInstall">
    <value>false</value>
  </property>
  <property name="packageExecutionCheck" displayName="packageExecutionCheck">
    <value>0</value>
  </property>
  <property name="suspendTriggersDuringDeploy" displayName="Suspend Triggers During Deployment">
    <value>false</value>
  </property>
  <property name="syncDocTypesToBroker" displayName="Synchronize Document Types To Broker During Deployment">
    <value>true</value>
  </property>
  <asset name="ISPackage.ScOrderToCash" displayName="ScOrderToCash">
    <implementation.generic type="ispackage" />
  </asset>
  <asset name="ScOrderToCash.Services._1_receiveOrder" displayName="ScOrderToCash.Services:_1_receiveOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.InboundOrder</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Services._7_updateBackEnd" displayName="ScOrderToCash.Services:_7_updateBackEnd">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.ShipNotice</dependsOn>
    <dependsOn>IS:ScOrderToCash.Documents.DeliveryConfirmation</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.nextRandonGaussian</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.sleep</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Services.runInboundOrder" displayName="ScOrderToCash.Services:runInboundOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.InboundOrder</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Services._8_deliveryConfirmation" displayName="ScOrderToCash.Services:_8_deliveryConfirmation">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.DeliveryConfirmation</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Services._3B_manualCreditCheck" displayName="ScOrderToCash.Services:_3B_manualCreditCheck">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.CreditCheckedOrder</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.createRandomFromList</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Services._4_dataMapping" displayName="ScOrderToCash.Services:_4_dataMapping">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.CreditCheckedOrder</dependsOn>
    <dependsOn>IS:ScOrderToCash.Documents.PurchaseOrder</dependsOn>
    <dependsOn>IS:ScJDBC.Orders.insertOrderHeader</dependsOn>
    <dependsOn>IS:ScJDBC.Orders.insertOrderLineItems</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Services._3A_autoCreditCheck" displayName="ScOrderToCash.Services:_3A_autoCreditCheck">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.InboundOrder</dependsOn>
    <dependsOn>IS:ScOrderToCash.Documents.CreditCheckedOrder</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Services._2_validateOrder" displayName="ScOrderToCash.Services:_2_validateOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.InboundOrder</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Services._3C_cancelledOrder" displayName="ScOrderToCash.Services:_3C_cancelledOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.CreditCheckedOrder</dependsOn>
    <dependsOn>IS:ScJDBC.Orders.insertOrderHeader</dependsOn>
    <dependsOn>IS:ScJDBC.Orders.insertOrderLineItems</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Services._5_createOrder" displayName="ScOrderToCash.Services:_5_createOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.PurchaseOrder</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Services._6_scheduleDelivery" displayName="ScOrderToCash.Services:_6_scheduleDelivery">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Documents.PurchaseOrder</dependsOn>
    <dependsOn>IS:ScOrderToCash.Documents.ShipNotice</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createCarrier</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.createRandomFromList</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.incrementDate</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createUniqueIdentifier</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.nextRandonGaussian</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Test.createBulkOrder" displayName="ScOrderToCash.Test:createBulkOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Util.createUniqueIdentifier</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createVendorName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createPurchaseTotal</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.sleep</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Test.createBadCreditOrder" displayName="ScOrderToCash.Test:createBadCreditOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Util.createUniqueIdentifier</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createRegion</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createCustomerName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createVendorName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createPurchaseTotal</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.sleep</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Test.createNormalOrder" displayName="ScOrderToCash.Test:createNormalOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Util.createUniqueIdentifier</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createRegion</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createCustomerName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createVendorName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createPurchaseTotal</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.sleep</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Test.createSlowResponse" displayName="ScOrderToCash.Test:createSlowResponse">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Util.createUniqueIdentifier</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createRegion</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createCustomerName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createVendorName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createPurchaseTotal</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.sleep</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Test.createLateDelivery" displayName="ScOrderToCash.Test:createLateDelivery">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Util.createUniqueIdentifier</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createRegion</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createCustomerName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createVendorName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createPurchaseTotal</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.sleep</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Test.createSingleOrder" displayName="ScOrderToCash.Test:createSingleOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Util.createUniqueIdentifier</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.sleep</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Test.createTooFewItemsOrder" displayName="ScOrderToCash.Test:createTooFewItemsOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Util.createUniqueIdentifier</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createRegion</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createCustomerName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createVendorName</dependsOn>
    <dependsOn>IS:ScOrderToCash.Util.createPurchaseTotal</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.sleep</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Test.createBulkBadCredit" displayName="ScOrderToCash.Test:createBulkBadCredit">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScOrderToCash.Test.createBadCreditOrder</dependsOn>
    <dependsOn>IS:ScBAMFramework.Util.sleep</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Util.createCarrier" displayName="ScOrderToCash.Util:createCarrier">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScBAMFramework.Util.createRandomFromList</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Util.incrementDate" displayName="ScOrderToCash.Util:incrementDate">
    <implementation.generic type="isjavaservice" />
    <dependsOn>IS:ScOrderToCash.code.source.ScOrderToCash.Util.java</dependsOn>
    <dependsOn>IS:ScOrderToCash.code.classes.ScOrderToCash.Util.class</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Util.createUniqueIdentifier" displayName="ScOrderToCash.Util:createUniqueIdentifier">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScBAMFramework.Util.nextRandonGaussian</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Util.createRegion" displayName="ScOrderToCash.Util:createRegion">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScBAMFramework.Util.createRandomFromList</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Util.createPurchaseTotal" displayName="ScOrderToCash.Util:createPurchaseTotal">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScBAMFramework.Util.nextRandonGaussian</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Util.createVendorName" displayName="ScOrderToCash.Util:createVendorName">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScBAMFramework.Util.createRandomFromList</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Util.checkCredit" displayName="ScOrderToCash.Util:checkCredit">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="ScOrderToCash.Util.createCustomerName" displayName="ScOrderToCash.Util:createCustomerName">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:ScBAMFramework.Util.createRandomFromList</dependsOn>
  </asset>
  <asset name="ScOrderToCash.Documents.CreditCheckedOrder" displayName="ScOrderToCash.Documents:CreditCheckedOrder">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="ScOrderToCash.Documents.ShipNotice" displayName="ScOrderToCash.Documents:ShipNotice">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="ScOrderToCash.Documents.InboundOrder" displayName="ScOrderToCash.Documents:InboundOrder">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="ScOrderToCash.Documents.PurchaseOrder" displayName="ScOrderToCash.Documents:PurchaseOrder">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="ScOrderToCash.Documents.DeliveryConfirmation" displayName="ScOrderToCash.Documents:DeliveryConfirmation">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="ScOrderToCash.code" displayName="code">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="ScOrderToCash.code.classes" displayName="code/classes">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="ScOrderToCash.code.classes.ScOrderToCash.Util.class" displayName="code/classes/ScOrderToCash/Util.class">
    <implementation.generic type="isfile" />
  </asset>
  <asset name="ScOrderToCash.code.source" displayName="code/source">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="ScOrderToCash.code.source.ScOrderToCash.Util.java" displayName="code/source/ScOrderToCash/Util.java">
    <implementation.generic type="isfile" />
  </asset>
  <asset name="ScOrderToCash.pub" displayName="pub">
    <implementation.generic type="isfolder" />
  </asset>
</asset_composite>

